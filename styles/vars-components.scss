/**
 * TGUI
 * Components Variables
 *
 * This file contains all variables used in components,
 * or almost all...
 *
 * If you make a new component, or edit an existing one
 * and you need a new color for it, it is highly advisable to
 * add a new variable for the component, and only then use the color.
 *
 * If vars-colors.scss or vars-values.scss doens't have needed variable
 * you can create it there and then use it here.
 *
 * That's allows downstreams to customize each component as needed,
 * creating their own unique TGUI designs with ease (almost).
 *
 * Don't add new base colors here, that files only for mixing and modifying
 * variables from vars-colors.scss and vars-values.scss,
 * for their further use in components.
 *
 * Made with love by Aylong (https://github.com/AyIong)
 */

:root {
  /* BlockQuote */
  --blockquote-color: hsl(
    from var(--color-label) h s calc(l + var(--adjust-color))
  );
  --blockquote-border: var(--border-thickness-small) solid;

  /* Button */
  --button-color-transparent: var(--color-text-translucent);
  --button-background-default: var(--color-primary);
  --button-background-selected: var(--color-green);
  --button-background-caution: var(--color-yellow);
  --button-background-danger: var(--color-red);
  --button-border-radius: var(--border-radius-tiny);
  --button-transition: var(--transition-time-medium);
  --button-transition-timing: ease;

  /* Dialog */
  --dialog-background: hsl(from var(--color-section) h s l / 0.5);

  /* Dimmer */
  --dimmer-background-opacity: 0.75;
  --dimmer-background: hsl(
    from var(--color-base) h s 5 / var(--dimmer-background-opacity)
  );

  /* Divider */
  --divider-color: var(--color-border);
  --divider-border: var(--border-thickness-small) solid var(--divider-color);

  /* Dropdown */
  --dropdown-transition: var(--transition-time-medium);
  --dropdown-menu-color: var(--color-text);
  --dropdown-menu-background: hsl(
    from var(--color-base) h s calc(l - 5.5) / 0.85
  );
  --dropdown-menu-border: var(--border-thickness-tiny) solid var(--color-border);
  --dropdown-menu-border-radius: var(--border-radius-large);
  --dropdown-menu-blur: var(--blur-medium);
  --dropdown-entry-background-hover: var(--color-hover);
  --dropdown-entry-background-active: var(--color-active);
  --dropdown-entry-background-selected: var(--color-selected);
  --dropdown-entry-border-radius: var(--border-radius-small);
  --dropdown-entry-transition: var(--transition-time-fast);

  /* Floating */
  --floating-transition-time: var(--transition-time-medium);
  --floating-transition-timing: ease;

  /* Tabs */
  --tab-background: transparent;
  --tab-background-hover: var(--color-hover);
  --tab-background-selected: var(--color-selected);
  --tab-color: var(--color-text-translucent);
  --tab-color-selected: hsl(from var(--color-primary) h s 90);
  --tab-border-radius: var(--border-radius-small);
  --tab-indicator-size: var(--border-thickness-small);
  --tab-transition: var(--transition-time-medium);
  --tabs-container-background: var(--color-section);

  /* Input */
  --input-background: hsl(from var(--color-base) h s 5);
  --input-color: var(--color-text);
  --input-color-placeholder: var(--color-text-translucent);
  --input-border-color: var(--color-border-primary);
  --input-border-color-focus: var(--color-border-secondary);
  --input-border-radius: var(--border-radius-tiny);
  --input-transition: var(--transition-time-medium);

  /* Number Input */
  --number-input-background: var(--input-background);
  --number-input-color: var(--input-color);
  --number-input-border-color: var(--input-border-color);
  --number-input-border-color-active: var(--input-border-color-focus);
  --number-input-border-radius: var(--input-border-radius);
  --number-input-transition: var(--input-transition);
}
