@use "../base";
@use "../colors";
@use "../functions" as *;

$color-default: colors.$primary !default;
$color-selected: colors.$green !default;
$color-caution: colors.$yellow !default;
$color-danger: colors.$red !default;
$color-transparent-text: var(--color-text-translucent) !default;
$border-radius: base.$border-radius !default;
$bg-map: colors.$color-map !default;

@mixin button-color($color) {
  background-color: adjust-lightness($color, var(--adjust-bg));
  color: var(--color-text-fixed);

  &:not(.Button--disabled) {
    &:hover {
      background-color: adjust-lightness($color, var(--adjust-hover));
      color: var(--color-text-fixed);
    }

    &:active {
      background-color: adjust-lightness($color, var(--adjust-active));
      color: var(--color-text-fixed);
    }
  }
}

.Button {
  cursor: base.$cursor-hover;
  position: relative;
  display: inline-block;
  line-height: 1.667em;
  padding: 0 0.5em;
  margin-right: base.em(2px);
  white-space: nowrap;
  outline: 0;
  border-radius: $border-radius;
  margin-bottom: base.em(2px);
  transition-property: background-color, color, opacity;
  transition-duration: 0.2s;
  // Disable selection in buttons
  user-select: none;

  &:active {
    transition: none;
  }

  &:last-child {
    margin-right: 0;
    margin-bottom: 0;
  }

  .fa,
  .fas,
  .far {
    margin-left: -0.25em;
    margin-right: -0.25em;
    min-width: 1.333em;
    text-align: center;
  }
}

.Button--dropdown {
  line-height: base.em(16px);
  height: base.em(22px);
  padding: 0.2rem 0.5rem;
}

.Button--hasContent {
  // Add a margin to the icon to keep it separate from the text
  .fa,
  .fas,
  .far {
    margin-right: 0.25em;
  }
}

.Button--hasContent.Button--iconPosition--right {
  .fa,
  .fas,
  .far {
    margin-right: 0px;
    margin-left: 3px;
  }
}

.Button--ellipsis {
  display: block;
  text-overflow: ellipsis;
  overflow: hidden;
  margin-right: -0.33em;
}

.Button--fluid {
  display: block;
  margin-left: 0;
  margin-right: 0;
}

.Button--circular {
  border-radius: 50%;
}

.Button--compact {
  padding: 0 0.25em;
  line-height: 1.333em;
}

@each $color-name, $color-value in $bg-map {
  .Button--color--#{$color-name} {
    @if $color-name == "white" or $color-name == "yellow" {
      --color-text-fixed: var(--color-black);
    }

    @include button-color($color-value);
  }
}

.Button--color--default {
  @include button-color($color-default);
}

.Button--color--caution {
  @include button-color($color-caution);
}

.Button--color--danger {
  @include button-color($color-danger);
}

.Button--color--transparent {
  color: var(--color-text-translucent);

  &:not(.Button--disabled) {
    &:hover {
      background-color: hsla(0, 0%, 50%, 0.15);
    }

    &:active {
      background-color: hsla(0, 0%, 50%, 0.25);
    }
  }
}

.Button--disabled {
  cursor: base.$cursor-disabled;
  opacity: 0.5;
}

.Button--selected {
  @include button-color($color-selected);
}

.Button--flex {
  display: inline-flex; //Inline even for fluid
  flex-direction: column;
}

.Button--flex--fluid {
  width: 100%;
}

.Button--verticalAlignContent--top {
  justify-content: flex-start;
}

.Button--verticalAlignContent--middle {
  justify-content: center;
}

.Button--verticalAlignContent--bottom {
  justify-content: flex-end;
}

.Button__content {
  display: block;
  align-self: stretch;

  &--ellipsis {
    display: flex; // Inline flex will broke ellipsis, don't change it.
    align-items: center;
  }
}
