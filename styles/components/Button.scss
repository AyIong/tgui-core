@use "../base";
@use "../colors";
@use "../functions" as *;

$color-default: var(--color-button-default) !default;
$color-selected: var(--color-button-selected) !default;
$color-caution: var(--color-button-caution) !default;
$color-danger: var(--color-button-danger) !default;
$color-transparent-text: var(--color-text-translucent) !default;
$border-radius: base.$border-radius !default;
$bg-map: colors.$color-map !default;

@mixin button-color($color) {
  cursor: var(--cursor-pointer);
  background-color: hsl(from $color h s calc(l + var(--adjust-bg)));
  color: var(--color-text-fixed);

  &:not(.Button--disabled) {
    &:hover {
      background-color: hsl(from $color h s calc(l + var(--adjust-hover)));
      color: var(--color-text-fixed);
    }

    &:active {
      background-color: hsl(from $color h s calc(l + var(--adjust-active)));
      color: var(--color-text-fixed);
    }
  }
}

.Button {
  position: relative;
  display: inline-block;
  white-space: nowrap;
  line-height: 1.667em;
  padding: 0 var(--space-m);
  margin-right: var(--space-xs);
  margin-bottom: var(--space-xs);
  outline: 0;
  border-radius: $border-radius;
  transition-property: background-color, color, opacity;
  transition-duration: 0.2s;
  // Disable selection in buttons
  user-select: none;

  &:active {
    transition: none;
  }

  &:last-child {
    margin-right: 0;
    margin-bottom: 0;
  }

  &__content {
    display: block;
    align-self: stretch;

    &--ellipsis {
      display: flex; // Inline flex will broke ellipsis, don't change it.
      align-items: center;
    }
  }

  i {
    min-width: 1.333em;
    text-align: center;
  }

  &:has(i) {
    padding-left: 0;

    i {
      margin: 0 var(--space-s);
    }
  }

  &--icon-right:has(i) {
    padding-left: var(--space-m);
    padding-right: var(--space-s);

    i {
      margin: 0 0 0 var(--space-s);
    }
  }

  &--empty:has(i) {
    padding: 0;
  }

  &--compact {
    padding: 0 var(--space-s);
    line-height: 1.333em;

    &:has(i) i {
      margin: 0 var(--space-xxs);
    }
  }

  &--circular {
    border-radius: 50%;
  }

  &--fluid {
    display: block;
    margin-left: 0;
    margin-right: 0;
  }

  &--ellipsis {
    display: block;
    text-overflow: ellipsis;
    overflow: hidden;
    margin-right: calc(-1 * var(--space-s));
  }
}

@each $color-name, $color-value in $bg-map {
  .Button--color--#{$color-name} {
    @if $color-name == "white" or $color-name == "yellow" {
      --color-text-fixed: var(--color-black);
    }

    @include button-color($color-value);
  }
}

.Button--color--default {
  @include button-color($color-default);
}

.Button--color--caution {
  @include button-color($color-caution);
}

.Button--color--danger {
  @include button-color($color-danger);
}

.Button--selected {
  @include button-color($color-selected);
}

.Button--color--transparent {
  color: $color-transparent-text;

  &:not(.Button--disabled) {
    &:hover {
      background-color: var(--color-hover);
    }

    &:active {
      background-color: var(--color-active);
    }
  }
}

.Button--disabled {
  cursor: var(--cursor-disabled);
  opacity: 0.5;
}

.Button--flex {
  display: inline-flex; //Inline even for fluid
  flex-direction: column;
}

.Button--flex--fluid {
  width: 100%;
}

.Button--verticalAlignContent--top {
  justify-content: flex-start;
}

.Button--verticalAlignContent--middle {
  justify-content: center;
}

.Button--verticalAlignContent--bottom {
  justify-content: flex-end;
}
